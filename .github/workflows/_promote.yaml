name: Promote a deployment

on:
  workflow_call:
    inputs:
      tag:
        type: string
        description: "The tag to deploy, or leave blank to use the latest source deployment"
        required: false
      destination:
        type: string
        description: "The destination environment"
        required: true
      source-default:
        type: string
        description: "The source environment"
        required: true

jobs:
  promote:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    environment: ${{ inputs.destination }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Determine deploy tag
        id: determine-deploy-tag
        run: |
          DEPLOY_TAG=${{ inputs.tag }}
          if [ -z "$DEPLOY_TAG" ]; then
            DEPLOY_TAG=$(<deployment/${{ inputs.source-default }}-deployment.txt)
            echo "No tag provided, using tag deployed to ${{ inputs.source-default }}: $DEPLOY_TAG"
          else
            echo "Using provided tag: $DEPLOY_TAG"
          fi
          echo "DEPLOY_TAG=$DEPLOY_TAG" >> $GITHUB_OUTPUT
          echo "EXISTING_TAG=$(<deployment/${{ inputs.destination }}-deployment.txt)" >> $GITHUB_OUTPUT
      - name: Deploy
        if: steps.determine-deploy-tag.outputs.DEPLOY_TAG != steps.determine-deploy-tag.outputs.EXISTING_TAG
        id: deploy
        run: |
          echo "Deploying ${{ steps.determine-deploy-tag.outputs.DEPLOY_TAG }} to ${{ inputs.destination }} in ${{ vars.REGION }}..."
      - name: Deployment skipped
        if: steps.deploy.outcome == 'skipped'
        run: |
          echo "Deployment skipped because the target deployment tag matches the existing deployment tag."
      - name: Update staging deployment file
        if: steps.deploy.outcome == 'success'
        id: update-deployment-file
        run: |
          echo "${{ steps.determine-deploy-tag.outputs.DEPLOY_TAG }}" > deployment/${{ inputs.destination }}-deployment.txt
      - name: Commit and push
        if: steps.deploy.outcome == 'success'
        uses: actions4git/add-commit-push@v1
        with:
          commit-message: "Update ${{ inputs.destination }} deploy tag\n[skip actions]"
